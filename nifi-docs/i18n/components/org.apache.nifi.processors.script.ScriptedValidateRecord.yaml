relationships:
  valid: {en: 'FlowFile containing the valid records from the incoming FlowFile will
      be routed to this relationship. If there are no valid records, no FlowFile will
      be routed to this Relationship.', zh: 包含来自传入FlowFile的有效记录的FlowFile将被路由到此关系。如果没有有效记录，则不会将FlowFile路由到此关系。}
  original: {en: 'After successful procession, the incoming FlowFile will be transferred
      to this relationship. This happens regardless the FlowFiles might routed to
      "valid" and "invalid" relationships.', zh: 处理成功后，传入的FlowFile将传输到此关系。无论FlowFiles可能路由到“有效”和“无效”关系，都会发生这种情况。}
  failure: {en: 'In case of any issue during processing the incoming flow file, the
      incoming FlowFile will be routed to this relationship.', zh: 如果在处理传入流文件期间出现任何问题，传入流文件将被路由到此关系。}
  invalid: {en: 'FlowFile containing the invalid records from the incoming FlowFile
      will be routed to this relationship. If there are no invalid records, no FlowFile
      will be routed to this Relationship.', zh: 包含来自传入FlowFile的无效记录的FlowFile将被路由到此关系。如果没有无效记录，则不会将FlowFile路由到此关系。}
capabilityDescription: {en: 'This processor provides the ability to validate records
    in FlowFiles using the user-provided script. The script is expected to have a
    record as incoming argument and return with a boolean value. Based on this result,
    the processor categorizes the records as "valid" or "invalid" and routes them
    to the respective relationship in batch. Additionally the original FlowFile will
    be routed to the "original" relationship or in case of unsuccessful processing,
    to the "failed" relationship.', zh: 该处理器能够使用用户提供的脚本验证FlowFiles中的记录。脚本应该有一个记录作为传入参数，并返回一个布尔值。基于此结果，处理器将记录分类为“有效”或“无效”，并将它们成批路由到相应的关系。此外，原始FlowFile将被路由到“原始”关系，如果处理不成功，则路由到“失败”关系。}
properties:
  Script File:
    en: {displayName: Script File, description: Path to script file to execute. Only
        one of Script File or Script Body may be used}
    zh: {description: 要执行的脚本文件的路径。只能使用脚本文件或脚本正文之一, displayName: 脚本文件}
  Script Engine:
    en: {displayName: Script Language, description: The Language to use for the script}
    zh: {description: 脚本使用的语言, displayName: 脚本语言}
  Script Body:
    en: {displayName: Script Body, description: Body of script to execute. Only one
        of Script File or Script Body may be used}
    zh: {description: 要执行的脚本体。只能使用脚本文件或脚本正文之一, displayName: 脚本正文}
  Record Writer:
    en: {displayName: Record Writer, description: The Record Writer to use for serializing
        Records after they have been transformed}
    zh: {description: 转换后用于序列化记录的记录编写器, displayName: 记录编写器}
  Record Reader:
    en: {displayName: Record Reader, description: The Record Reader to use parsing
        the incoming FlowFile into Records}
    zh: {description: 用于将传入的FlowFile解析为记录的记录读取器, displayName: 记录读取器}
  Module Directory:
    en: {displayName: Module Directory, description: Comma-separated list of paths
        to files and/or directories which contain modules required by the script.}
    zh: {description: 包含脚本所需模块的文件和/或目录路径的逗号分隔列表。, displayName: 模块目录}
writeAttributes:
  record.error.message: {en: This attribute provides on failure the error message
      encountered by the Reader or Writer., zh: 此属性在失败时提供读取器或写入器遇到的错误消息。}
  record.count: {en: The number of records within the flow file., zh: 流文件中的记录数。}
  mime.type: {en: Sets the mime.type attribute to the MIME Type specified by the Record
      Writer, zh: 设置mime。type属性设置为记录编写器指定的MIME类型}
tags:
  en: [record, validate, script, groovy, jython, python]
  zh: [记录, 验证, 剧本, 常规的, jython公司, 蟒蛇]
