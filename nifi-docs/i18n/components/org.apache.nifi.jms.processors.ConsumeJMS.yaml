relationships:
  success: {en: All FlowFiles that are received from the JMS Destination are routed
      to this relationship, zh: 从JMS目标接收的所有流文件都将路由到此关系}
dynamicProperties:
  The name of a Connection Factory configuration property.:
    en: {description: 'Additional configuration property for the Connection Factory.
        It can be used when the Connection Factory is being configured via the ''JNDI
        *'' or the ''JMS *''properties of the processor. For more information, see
        the Additional Details page.', value: The value of a given Connection Factory
        configuration property.}
    zh: {description: 连接工厂的其他配置属性。当通过处理器的“JNDI*”或“JMS*”属性配置连接工厂时，可以使用它。有关详细信息，请参阅“其他详细信息”页面。,
      value: 给定连接工厂配置属性的值。}
capabilityDescription: {en: 'Consumes JMS Message of type BytesMessage, TextMessage,
    ObjectMessage, MapMessage or StreamMessage transforming its content to a FlowFile
    and transitioning it to ''success'' relationship. JMS attributes such as headers
    and properties will be copied as FlowFile attributes. MapMessages will be transformed
    into JSONs and then into byte arrays. The other types will have their raw contents
    as byte array transferred into the flowfile.', zh: 使用BytesMessage、TextMessage、ObjectMessage、MapMessage或StreamMessage类型的JMS消息，将其内容转换为FlowFile并将其转换为“成功”关系。JMS属性（如标头和属性）将复制为FlowFile属性。MapMessages将被转换为JSON，然后转换为字节数组。其他类型的原始内容将作为字节数组传输到流文件中。}
properties:
  character-set:
    en: {displayName: Character Set, description: The name of the character set to
        use to construct or interpret TextMessages}
    zh: {description: 用于构造或解释TextMessage的字符集的名称, displayName: 字符集}
  java.naming.factory.initial:
    en: {displayName: JNDI Initial Context Factory Class, description: The fully qualified
        class name of the JNDI Initial Context Factory Class (java.naming.factory.initial).}
    zh: {description: JNDI初始上下文工厂类的完全限定类名（java.nameing.Factory.Initial）。, displayName: JNDI初始上下文工厂类}
  Destination Name:
    en: {displayName: Destination Name, description: 'The name of the JMS Destination.
        Usually provided by the administrator (e.g., ''topic://myTopic'' or ''myTopic'').'}
    zh: {description: 'JMS目标的名称。通常由管理员提供（例如topic://myTopic''或''myTopic''）。', displayName: 目标名称}
  java.naming.provider.url:
    en: {displayName: JNDI Provider URL, description: The URL of the JNDI Provider
        to use (java.naming.provider.url).}
    zh: {description: 要使用的JNDI Provider的URL（java.nameing.Provider.URL）。, displayName: JNDI提供程序URL}
  Connection Factory Service:
    en: {displayName: Connection Factory Service, description: 'The Controller Service
        that is used to obtain Connection Factory. Alternatively, the ''JNDI *'' or
        the ''JMS *'' properties can also be be used to configure the Connection Factory.'}
    zh: {description: 用于获取连接工厂的控制器服务。或者，也可以使用“JNDI*”或“JMS*”属性来配置连接工厂。, displayName: 连接工厂服务}
  Subscription Name:
    en: {displayName: Subscription Name, description: The name of the subscription
        to use if destination is Topic and is shared or durable.}
    zh: {description: 如果目标是主题并且是共享或持久的，则使用的订阅的名称。, displayName: 订阅名}
  Error Queue Name:
    en: {displayName: Error Queue Name, description: 'The name of a JMS Queue where
        - if set - unprocessed messages will be routed. Usually provided by the administrator
        (e.g., ''queue://myErrorQueue'' or ''myErrorQueue'').Only applicable if ''Destination
        Type'' is set to ''QUEUE'''}
    zh: {description: 'JMS队列的名称，如果已设置，则将在其中路由未处理的消息。通常由管理员提供（例如queue://myErrorQueue''或''myErrorQueue''）。仅当“Destination
        Type”设置为“QUEUE”时适用', displayName: 错误队列名称}
  Session Cache size:
    en: {displayName: Session Cache Size, description: This property is deprecated
        and no longer has any effect on the Processor. It will be removed in a later
        version.}
    zh: {description: 此属性已弃用，不再对处理器产生任何影响。它将在更高版本中删除。, displayName: 会话缓存大小}
  Destination Type:
    en: {displayName: Destination Type, description: The type of the JMS Destination.
        Could be one of 'QUEUE' or 'TOPIC'. Usually provided by the administrator.
        Defaults to 'QUEUE'}
    zh: {description: JMS目标的类型。可能是“QUEUE”或“TOPIC”之一。通常由管理员提供。默认为“QUEUE”, displayName: 目的地类型}
  Acknowledgement Mode:
    en: {displayName: Acknowledgement Mode, description: The JMS Acknowledgement Mode.
        Using Auto Acknowledge can cause messages to be lost on restart of NiFi but
        may provide better performance than Client Acknowledge.}
    zh: {description: JMS确认模式。使用自动确认会导致重新启动NiFi时消息丢失，但可能提供比客户端确认更好的性能。, displayName: 确认模式}
  Password:
    en: {displayName: Password, description: Password used for authentication and
        authorization.}
    zh: {description: 用于身份验证和授权的密码。, displayName: 暗语}
  cflib:
    en: {displayName: JMS Client Libraries, description: 'Path to the directory with
        additional resources (eg. JARs, configuration files etc.) to be added to the
        classpath (defined as a comma separated list of values). Such resources typically
        represent target JMS client libraries for the ConnectionFactory implementation.'}
    zh: {description: 包含要添加到类路径的其他资源（例如JAR、配置文件等）的目录路径（定义为逗号分隔的值列表）。这些资源通常表示ConnectionFactory实现的目标JMS客户端库。,
      displayName: JMS客户端库}
  cf:
    en: {displayName: JMS Connection Factory Implementation Class, description: The
        fully qualified name of the JMS ConnectionFactory implementation class (eg.
        org.apache.activemq.ActiveMQConnectionFactory).}
    zh: {description: JMS ConnectionFactory实现类的完全限定名称（例如org.apache.activemq.ActiveMQConnectionFactory）。,
      displayName: JMS连接工厂实现类}
  User Name:
    en: {displayName: User Name, description: User Name used for authentication and
        authorization.}
    zh: {description: 用于身份验证和授权的用户名。, displayName: 用户名}
  Shared subscription:
    en: {displayName: Shared Subscription, description: 'If destination is Topic if
        present then make it the consumer shared. @see https://docs.oracle.com/javaee/7/api/javax/jms/Session.html#createSharedConsumer-javax.jms.Topic-java.lang.String-'}
    zh: {description: '如果目标是主题（如果存在），则将其设置为消费者共享@看见https://docs.oracle.com/javaee/7/api/javax/jms/Session.html#createSharedConsumer-javax.jms.Topic-java.lang.String-',
      displayName: 共享订阅}
  Timeout:
    en: {displayName: Timeout, description: How long to wait to consume a message
        from the remote broker before giving up.}
    zh: {description: 在放弃之前等待多长时间才能使用来自远程代理的消息。, displayName: 超时}
  naming.factory.libraries:
    en: {displayName: JNDI / JMS Client Libraries, description: 'Specifies jar files
        and/or directories to add to the ClassPath in order to load the JNDI / JMS
        client libraries. This should be a comma-separated list of files, directories,
        and/or URLs. If a directory is given, any files in that directory will be
        included, but subdirectories will not be included (i.e., it is not recursive).'}
    zh: {description: 指定要添加到ClassPath的jar文件和/或目录，以便加载JNDI/JMS客户端库。这应该是一个逗号分隔的文件、目录和/或URL列表。如果给定了一个目录，则该目录中的任何文件都将被包含，但子目录不会被包含（即，它不是递归的）。,
      displayName: JNDI/JMS客户端库}
  Durable subscription:
    en: {displayName: Durable Subscription, description: 'If destination is Topic
        if present then make it the consumer durable. @see https://docs.oracle.com/javaee/7/api/javax/jms/Session.html#createDurableConsumer-javax.jms.Topic-java.lang.String-'}
    zh: {description: '如果目标是主题（如果存在），则使其成为消费者持久的目标@看见https://docs.oracle.com/javaee/7/api/javax/jms/Session.html#createDurableConsumer-javax.jms.Topic-java.lang.String-',
      displayName: 持久订阅}
  broker:
    en: {displayName: JMS Broker URI, description: 'URI pointing to the network location
        of the JMS Message broker. Example for ActiveMQ: ''tcp://myhost:61616''. Examples
        for IBM MQ: ''myhost(1414)'' and ''myhost01(1414),myhost02(1414)''.'}
    zh: {description: '指向JMS消息代理的网络位置的URI。ActiveMQ示例：''tcp://myhost:61616''. IBM MQ的示例：“myhost（1414）”和“myhost01（1414。',
      displayName: JMS代理URI}
  connection.factory.name:
    en: {displayName: JNDI Name of the Connection Factory, description: The name of
        the JNDI Object to lookup for the Connection Factory.}
    zh: {description: 要查找连接工厂的JNDI对象的名称。, displayName: 连接工厂的JNDI名称}
  Message Selector:
    en: {displayName: Message Selector, description: The JMS Message Selector to filter
        the messages that the processor will receive}
    zh: {description: 用于筛选处理器将接收的消息的JMS消息选择器, displayName: 消息选择器}
  SSL Context Service:
    en: {displayName: JMS SSL Context Service, description: The SSL Context Service
        used to provide client certificate information for TLS/SSL connections.}
    zh: {description: 用于为TLS/SSL连接提供客户端证书信息的SSL上下文服务。, displayName: JMS SSL上下文服务}
  Connection Client ID:
    en: {displayName: Connection Client ID, description: 'The client id to be set
        on the connection, if set. For durable non shared consumer this is mandatory,
        for all others it is optional, typically with shared consumers it is undesirable
        to be set. Please see JMS spec for further details'}
    zh: {description: 要在连接上设置的客户端id（如果已设置）。对于耐用的非共享消费者，这是强制性的，对于所有其他消费者，这都是可选的，通常对于共享消费者，不希望设置。有关详细信息，请参阅JMS规范,
      displayName: 连接客户端ID}
  java.naming.security.principal:
    en: {displayName: JNDI Principal, description: The Principal to use when authenticating
        with JNDI (java.naming.security.principal).}
    zh: {description: 使用JNDI进行身份验证时要使用的主体（java.nameing.security.prprincipal）。, displayName: JNDI主体}
  java.naming.security.credentials:
    en: {displayName: JNDI Credentials, description: The Credentials to use when authenticating
        with JNDI (java.naming.security.credentials).}
    zh: {description: 使用JNDI进行身份验证时要使用的凭据（java.nameing.security.Credentials）。, displayName: JNDI凭据}
writeAttributes:
  other attributes: {en: Each message property is written to an attribute., zh: 每个消息属性都写入一个属性。}
  jms_redelivered: {en: The JMSRedelivered from the message header., zh: JMReddelivered来自消息头。}
  jms_deliveryMode: {en: The JMSDeliveryMode from the message header., zh: 消息头中的JMSDeliveryMode。}
  jms_replyTo: {en: The JMSReplyTo from the message header., zh: 消息头中的JMSReplyTo。}
  jms.messagetype: {en: 'The JMS message type, can be TextMessage, BytesMessage, ObjectMessage,
      MapMessage or StreamMessage).', zh: JMS消息类型，可以是TextMessage、BytesMessage、ObjectMessage、MapMessage或StreamMessage）。}
  jms_destination: {en: The JMSDestination from the message header., zh: 消息头中的JMSDestination。}
  jms_priority: {en: The JMSPriority from the message header., zh: 消息头中的JMSPriority。}
  jms_correlationId: {en: The JMSCorrelationID from the message header., zh: 消息头中的JMSCorrelationID。}
  jms_type: {en: The JMSType from the message header., zh: 消息头中的JMSType。}
  jms_timestamp: {en: The JMSTimestamp from the message header., zh: 消息头中的JMSTimestamp。}
  jms_expiration: {en: The JMSExpiration from the message header., zh: 消息头中的JMSExpiration。}
  jms_messageId: {en: The JMSMessageID from the message header., zh: 消息头中的JMSMessageID。}
tags:
  en: [jms, get, message, receive, consume]
  zh: [jms公司, 收到, 消息, 接收, 消费]
