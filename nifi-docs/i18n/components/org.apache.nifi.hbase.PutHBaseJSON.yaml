relationships:
  success: {en: A FlowFile is routed to this relationship after it has been successfully
      stored in HBase, zh: FlowFile成功存储在HBase中后，将被路由到此关系}
  failure: {en: A FlowFile is routed to this relationship if it cannot be sent to
      HBase, zh: 如果FlowFile无法发送到HBase，则将其路由到此关系}
dynamicProperties:
  visibility.<COLUMN FAMILY>:
    en: {description: Visibility label for everything under that column family when
        a specific label for a particular column qualifier is not available., value: visibility
        label for <COLUMN FAMILY>}
    zh: {description: 当特定列限定符的特定标签不可用时，该列族下所有内容的可见性标签。, value: <COLUMN FAMILY>的可见性标签}
  visibility.<COLUMN FAMILY>.<COLUMN QUALIFIER>:
    en: {description: Visibility label for the specified column qualifier qualified
        by a configured column family., value: 'visibility label for <COLUMN FAMILY>:<COLUMN
        QUALIFIER>.'}
    zh: {description: 由配置的列族限定的指定列限定符的可见性标签。, value: <COLUMN FAMILY>的可见性标签：<COLUMN-QUALIFIER>。}
capabilityDescription: {en: 'Adds rows to HBase based on the contents of incoming
    JSON documents. Each FlowFile must contain a single UTF-8 encoded JSON document,
    and any FlowFiles where the root element is not a single document will be routed
    to failure. Each JSON field name and value will become a column qualifier and
    value of the HBase row. Any fields with a null value will be skipped, and fields
    with a complex value will be handled according to the Complex Field Strategy.
    The row id can be specified either directly on the processor through the Row Identifier
    property, or can be extracted from the JSON document by specifying the Row Identifier
    Field Name property. This processor will hold the contents of all FlowFiles for
    the given batch in memory at one time.', zh: 根据传入JSON文档的内容向HBase添加行。每个FlowFile必须包含一个UTF-8编码的JSON文档，任何根元素不是单个文档的FlowFile都将被路由到失败。每个JSON字段名和值将成为HBase行的列限定符和值。任何具有空值的字段都将被跳过，具有复杂值的字段将根据复杂字段策略进行处理。行id可以直接在处理器上通过行标识符属性指定，也可以通过指定行标识符字段名称属性从JSON文档中提取。此处理器将一次性将给定批次的所有FlowFiles的内容保存在内存中。}
properties:
  Row Identifier:
    en: {displayName: Row Identifier, description: Specifies the Row ID to use when
        inserting data into HBase}
    zh: {description: 指定将数据插入HBase时要使用的行ID, displayName: 行标识符}
  Table Name:
    en: {displayName: Table Name, description: The name of the HBase Table to put
        data into}
    zh: {description: 要将数据放入的HBase表的名称, displayName: 表名称}
  Row Identifier Encoding Strategy:
    en: {displayName: Row Identifier Encoding Strategy, description: 'Specifies the
        data type of Row ID used when inserting data into HBase. The default behavior
        is to convert the row id to a UTF-8 byte array. Choosing Binary will convert
        a binary formatted string to the correct byte[] representation. The Binary
        option should be used if you are using Binary row keys in HBase'}
    zh: {description: '指定将数据插入HBase时使用的行ID的数据类型。默认行为是将行id转换为UTF-8字节数组。选择Binary将将二进制格式的字符串转换为正确的byte[]表示形式。如果在HBase中使用Binary行键，则应使用Binary选项',
      displayName: 行标识符编码策略}
  Row Identifier Field Name:
    en: {displayName: Row Identifier Field Name, description: Specifies the name of
        a JSON element whose value should be used as the row id for the given JSON
        document.}
    zh: {description: 指定JSON元素的名称，其值应用作给定JSON文档的行id。, displayName: 行标识符字段名称}
  Complex Field Strategy:
    en: {displayName: Complex Field Strategy, description: 'Indicates how to handle
        complex fields, i.e. fields that do not have a single text value.'}
    zh: {description: 指示如何处理复杂字段，即没有单个文本值的字段。, displayName: 复杂现场策略}
  Batch Size:
    en: {displayName: Batch Size, description: 'The maximum number of FlowFiles to
        process in a single execution. The FlowFiles will be grouped by table, and
        a single Put per table will be performed.'}
    zh: {description: 一次执行中要处理的最大FlowFiles数。FlowFiles将按表分组，并对每个表执行一次Put。, displayName: 批量大小}
  Column Family:
    en: {displayName: Column Family, description: The Column Family to use when inserting
        data into HBase}
    zh: {description: 在HBase中插入数据时要使用的列系列, displayName: 柱族}
  Field Encoding Strategy:
    en: {displayName: Field Encoding Strategy, description: 'Indicates how to store
        the value of each field in HBase. The default behavior is to convert each
        value from the JSON to a String, and store the UTF-8 bytes. Choosing Bytes
        will interpret the type of each field from the JSON, and convert the value
        to the byte representation of that type, meaning an integer will be stored
        as the byte representation of that integer.'}
    zh: {description: 指示如何在HBase中存储每个字段的值。默认行为是将JSON中的每个值转换为字符串，并存储UTF-8字节。选择Bytes将解释JSON中每个字段的类型，并将值转换为该类型的字节表示，这意味着将存储一个整数作为该整数的字节表示。,
      displayName: 字段编码策略}
  HBase Client Service:
    en: {displayName: HBase Client Service, description: Specifies the Controller
        Service to use for accessing HBase.}
    zh: {description: 指定用于访问HBase的控制器服务。, displayName: HBase客户端服务}
  timestamp:
    en: {displayName: Timestamp, description: The timestamp for the cells being created
        in HBase. This field can be left blank and HBase will use the current time.}
    zh: {description: HBase中创建的单元格的时间戳。此字段可以留空，HBase将使用当前时间。, displayName: 时间戳}
tags:
  en: [hadoop, hbase, put, json]
  zh: [hadoop公司, 数据库, 放, json文件]
