relationships:
  success: {en: All FlowFiles that are received are routed to success, zh: 接收到的所有FlowFiles都将路由成功}
capabilityDescription: {en: 'Retrieves a listing of files from the local filesystem.
    For each file that is listed, creates a FlowFile that represents the file so that
    it can be fetched in conjunction with FetchFile. This Processor is designed to
    run on Primary Node only in a cluster. If the primary node changes, the new Primary
    Node will pick up where the previous node left off without duplicating all of
    the data. Unlike GetFile, this Processor does not delete any data from the local
    filesystem.', zh: 从本地文件系统检索文件列表。对于列出的每个文件，创建一个表示该文件的FlowFile，以便可以与FetchFile一起获取该文件。此处理器设计为仅在群集中的主节点上运行。如果主节点发生更改，新的主节点将在不复制所有数据的情况下恢复上一个节点停止的位置。与GetFile不同，此处理器不会从本地文件系统中删除任何数据。}
statefulDescription: {en: 'After performing a listing of files, the timestamp of the
    newest file is stored. This allows the Processor to list only files that have
    been added or modified after this date the next time that the Processor is run.
    Whether the state is stored with a Local or Cluster scope depends on the value
    of the <Input Directory Location> property.', zh: 执行文件列表后，将存储最新文件的时间戳。这允许处理器在下次运行处理器时仅列出在此日期之后添加或修改的文件。状态是否存储在本地或群集作用域中取决于<Input
    Directory Location>属性的值。}
properties:
  Minimum File Age:
    en: {displayName: Minimum File Age, description: The minimum age that a file must
        be in order to be pulled; any file younger than this amount of time (according
        to last modification date) will be ignored}
    zh: {description: 文件必须达到的最短使用期限才能被提取；任何小于此时间（根据上次修改日期）的文件都将被忽略, displayName: 最小文件期限}
  et-initial-listing-target:
    en: {displayName: Entity Tracking Initial Listing Target, description: Specify
        how initial listing should be handled. Used by 'Tracking Entities' strategy.}
    zh: {description: 指定如何处理初始列表。由“跟踪实体”策略使用。, displayName: 实体跟踪初始上市目标}
  Maximum File Age:
    en: {displayName: Maximum File Age, description: The maximum age that a file must
        be in order to be pulled; any file older than this amount of time (according
        to last modification date) will be ignored}
    zh: {description: 文件必须达到的最长使用期限才能被提取；任何早于此时间（根据上次修改日期）的文件都将被忽略, displayName: 最大文件期限}
  max-listing-time:
    en: {displayName: Max Directory Listing Time, description: 'The maximum amount
        of time that listing any single directory is expected to take. If the listing
        for the directory specified by the ''Input Directory'' property, or the listing
        of any subdirectory (if ''Recurse'' is set to true) takes longer than this
        amount of time, a warning bulletin will be generated for each directory listing
        that exceeds this amount of time.'}
    zh: {description: 列出任何单个目录所需的最长时间。如果“Input directory”属性指定的目录的列表或任何子目录的列表（如果“Recurse”设置为true）花费的时间超过此时间，则将为超过此时间的每个目录列表生成警告公告。,
      displayName: 最长目录列表时间}
  record-writer:
    en: {displayName: Record Writer, description: 'Specifies the Record Writer to
        use for creating the listing. If not specified, one FlowFile will be created
        for each entity that is listed. If the Record Writer is specified, all entities
        will be written to a single FlowFile instead of adding attributes to individual
        FlowFiles.'}
    zh: {description: 指定用于创建列表的记录编写器。如果未指定，将为列出的每个实体创建一个FlowFile。如果指定了记录编写器，则所有实体都将写入单个FlowFile，而不是向单个FlowFile添加属性。,
      displayName: 记录编写器}
  Maximum File Size:
    en: {displayName: Maximum File Size, description: The maximum size that a file
        can be in order to be pulled}
    zh: {description: 文件可以被拉取的最大大小, displayName: 最大文件大小}
  et-time-window:
    en: {displayName: Entity Tracking Time Window, description: 'Specify how long
        this processor should track already-listed entities. ''Tracking Entities''
        strategy can pick any entity whose timestamp is inside the specified time
        window. For example, if set to ''30 minutes'', any entity having timestamp
        in recent 30 minutes will be the listing target when this processor runs.
        A listed entity is considered ''new/updated'' and a FlowFile is emitted if
        one of following condition meets: 1. does not exist in the already-listed
        entities, 2. has newer timestamp than the cached entity, 3. has different
        size than the cached entity. If a cached entity''s timestamp becomes older
        than specified time window, that entity will be removed from the cached already-listed
        entities. Used by ''Tracking Entities'' strategy.'}
    zh: {description: 指定此处理器跟踪已列出实体的时间。'跟踪实体的策略可以选择时间戳在指定时间窗口内的任何实体。例如，如果设置为“30分钟”，则在该处理器运行时，具有最近30分钟时间戳的任何实体都将成为列表目标。如果满足以下条件之一，则将列出的实体视为“新的/更新的”，并发出FlowFile：1.已列出的实体中不存在，2.具有比缓存实体更新的时间戳，3.具有与缓存实体不同的大小。如果缓存实体的时间戳早于指定的时间窗口，则将从缓存的已列出实体中删除该实体。由“跟踪实体”策略使用。,
      displayName: 实体跟踪时间窗口}
  et-node-identifier:
    en: {displayName: Entity Tracking Node Identifier, description: The configured
        value will be appended to the cache key so that listing state can be tracked
        per NiFi node rather than cluster wide when tracking state is scoped to LOCAL.
        Used by 'Tracking Entities' strategy.}
    zh: {description: 配置的值将附加到缓存键，以便在跟踪状态范围为LOCAL时，可以按NiFi节点而不是集群范围跟踪列表状态。由“跟踪实体”策略使用。,
      displayName: 实体跟踪节点标识符}
  Recurse Subdirectories:
    en: {displayName: Recurse Subdirectories, description: Indicates whether to list
        files from subdirectories of the directory}
    zh: {description: 指示是否列出目录子目录中的文件, displayName: 定期子目录}
  File Filter:
    en: {displayName: File Filter, description: Only files whose names match the given
        regular expression will be picked up}
    zh: {description: 只有名称与给定正则表达式匹配的文件才会被拾取, displayName: 文件筛选器}
  Path Filter:
    en: {displayName: Path Filter, description: 'When Recurse Subdirectories is true,
        then only subdirectories whose path matches the given regular expression will
        be scanned'}
    zh: {description: 当Recurse Subdirectories为true时，将仅扫描路径与给定正则表达式匹配的子目录, displayName: 路径筛选器}
  Include File Attributes:
    en: {displayName: Include File Attributes, description: 'Whether or not to include
        information such as the file''s Last Modified Time and Owner as FlowFile Attributes.
        Depending on the File System being used, gathering this information can be
        expensive and as a result should be disabled. This is especially true of remote
        file shares.'}
    zh: {description: 是否将文件的上次修改时间和所有者等信息作为FlowFile属性。根据所使用的文件系统，收集这些信息可能会很昂贵，因此应禁用。远程文件共享尤其如此。,
      displayName: 包含文件属性}
  Input Directory Location:
    en: {displayName: Input Directory Location, description: Specifies where the Input
        Directory is located. This is used to determine whether state should be stored
        locally or across the cluster.}
    zh: {description: 指定输入目录的位置。这用于确定状态应本地存储还是跨集群存储。, displayName: 输入目录位置}
  listing-strategy:
    en: {displayName: Listing Strategy, description: Specify how to determine new/updated
        entities. See each strategy descriptions for detail.}
    zh: {description: 指定如何确定新的/更新的实体。有关详细信息，请参阅每个策略描述。, displayName: 上市策略}
  Input Directory:
    en: {displayName: Input Directory, description: The input directory from which
        files to pull files}
    zh: {description: 从中提取文件的输入目录, displayName: 输入目录}
  target-system-timestamp-precision:
    en: {displayName: Target System Timestamp Precision, description: 'Specify timestamp
        precision at the target system. Since this processor uses timestamp of entities
        to decide which should be listed, it is crucial to use the right timestamp
        precision.'}
    zh: {description: 指定目标系统的时间戳精度。由于此处理器使用实体的时间戳来决定应列出哪些实体，因此使用正确的时间戳精度至关重要。, displayName: 目标系统时间戳精度}
  track-performance:
    en: {displayName: Track Performance, description: 'Whether or not the Processor
        should track the performance of disk access operations. If true, all accesses
        to disk will be recorded, including the file being accessed, the information
        being obtained, and how long it takes. This is then logged periodically at
        a DEBUG level. While the amount of data will be capped, this option may still
        consume a significant amount of heap (controlled by the ''Maximum Number of
        Files to Track'' property), but it can be very useful for troubleshooting
        purposes if performance is poor is degraded.'}
    zh: {description: 处理器是否应跟踪磁盘访问操作的性能。如果为true，将记录对磁盘的所有访问，包括正在访问的文件、获取的信息以及所需的时间。然后在DEBUG级别定期记录。虽然数据量将受到限制，但此选项可能仍会消耗大量堆（由“要跟踪的最大文件数”属性控制），但如果性能不佳或降级，则它对于故障排除非常有用。,
      displayName: 跟踪性能}
  max-performance-metrics:
    en: {displayName: Maximum Number of Files to Track, description: 'If the ''Track
        Performance'' property is set to ''true'', this property indicates the maximum
        number of files whose performance metrics should be held onto. A smaller value
        for this property will result in less heap utilization, while a larger value
        may provide more accurate insights into how the disk access operations are
        performing'}
    zh: {description: 如果“跟踪性能”属性设置为“true”，则此属性表示应保留其性能指标的最大文件数。此属性的值越小，堆利用率越低，而值越大，可以更准确地了解磁盘访问操作的执行情况,
      displayName: 要跟踪的最大文件数}
  Minimum File Size:
    en: {displayName: Minimum File Size, description: The minimum size that a file
        must be in order to be pulled}
    zh: {description: 文件必须达到的最小大小才能被拉取, displayName: 最小文件大小}
  Ignore Hidden Files:
    en: {displayName: Ignore Hidden Files, description: Indicates whether or not hidden
        files should be ignored}
    zh: {description: 指示是否应忽略隐藏文件, displayName: 忽略隐藏文件}
  et-state-cache:
    en: {displayName: Entity Tracking State Cache, description: 'Listed entities are
        stored in the specified cache storage so that this processor can resume listing
        across NiFi restart or in case of primary node change. ''Tracking Entities''
        strategy require tracking information of all listed entities within the last
        ''Tracking Time Window''. To support large number of entities, the strategy
        uses DistributedMapCache instead of managed state. Cache key format is ''ListedEntities::{processorId}(::{nodeId})''.
        If it tracks per node listed entities, then the optional ''::{nodeId}'' part
        is added to manage state separately. E.g. cluster wide cache key = ''ListedEntities::8dda2321-0164-1000-50fa-3042fe7d6a7b'',
        per node cache key = ''ListedEntities::8dda2321-0164-1000-50fa-3042fe7d6a7b::nifi-node3''
        The stored cache content is Gzipped JSON string. The cache key will be deleted
        when target listing configuration is changed. Used by ''Tracking Entities''
        strategy.'}
    zh: {description: '列出的实体存储在指定的缓存存储中，以便此处理器可以在NiFi重新启动或主节点更改时恢复列出“跟踪实体”策略要求在上一个“跟踪时间窗口”内跟踪所有列出实体的信息。为了支持大量实体，该策略使用DistributedMapCache而不是托管状态。缓存密钥格式为“ListedEntities:：｛processorId｝（：：｛nodeId｝）”。如果它跟踪每个节点列出的实体，则会添加可选的“：：｛nodeId｝”部分以单独管理状态。E、
        g.集群范围的缓存键=“ListedEntities:：8dda2321-0164-1000-50fa-3042fe7d6a7b”，每个节点的缓存键为“ListedEntitys::8dda23201-0164-1000-50fa-3042fe7d
        6a7b:：nifi-node3”存储的缓存内容为Gzipped JSON字符串。更改目标列表配置时，将删除缓存密钥。由“跟踪实体”策略使用。',
      displayName: 实体跟踪状态缓存}
  max-operation-time:
    en: {displayName: Max Disk Operation Time, description: 'The maximum amount of
        time that any single disk operation is expected to take. If any disk operation
        takes longer than this amount of time, a warning bulletin will be generated
        for each operation that exceeds this amount of time.'}
    zh: {description: 任何单个磁盘操作所需的最长时间。如果任何磁盘操作花费的时间超过此时间，则将为超过此时间的每个操作生成警告公告。, displayName: 最大磁盘操作时间}
writeAttributes:
  absolute.path: {en: 'The absolute.path is set to the absolute path of the file''s
      directory on filesystem. For example, if the Input Directory property is set
      to /tmp, then files picked up from /tmp will have the path attribute set to
      "/tmp/". If the Recurse Subdirectories property is set to true and a file is
      picked up from /tmp/abc/1/2/3, then the path attribute will be set to "/tmp/abc/1/2/3/".',
    zh: 绝对的。路径设置为文件系统上文件目录的绝对路径。例如，如果“输入目录”属性设置为/tmp，则从/tmp拾取的文件的路径属性将设置为“/tmp/”。如果Recurse
      Subdirectories属性设置为true，并且从/tmp/abc/1/2/3获取文件，则路径属性将设置为“/tmp/abs/1/2/3/”。}
  path: {en: 'The path is set to the relative path of the file''s directory on filesystem
      compared to the Input Directory property.  For example, if Input Directory is
      set to /tmp, then files picked up from /tmp will have the path attribute set
      to "/". If the Recurse Subdirectories property is set to true and a file is
      picked up from /tmp/abc/1/2/3, then the path attribute will be set to "abc/1/2/3/".',
    zh: 与“输入目录”属性相比，路径设置为文件系统上文件目录的相对路径。例如，如果将“输入目录”设置为/tmp，则从/tmp拾取的文件的路径属性将设置为“/”。如果Recurse
      Subdirectories属性设置为true，并且从/tmp/abc/1/2/3获取文件，则路径属性将设置为“abc/1/2/3/”。}
  filename: {en: The name of the file that was read from filesystem., zh: 从文件系统读取的文件的名称。}
  file.group: {en: The group that owns the file in filesystem, zh: 文件系统中拥有文件的组}
  file.lastModifiedTime: {en: 'The timestamp of when the file in filesystem was last
      modified as ''yyyy-MM-dd''T''HH:mm:ssZ''', zh: '文件系统中文件上次修改为“yyyy-MM-dd”“HH:MM:ssZ”时的时间戳'}
  file.lastAccessTime: {en: 'The timestamp of when the file in filesystem was last
      accessed as ''yyyy-MM-dd''T''HH:mm:ssZ''', zh: '上次访问文件系统中文件的时间戳为“yyyy-MM-dd”“HH:MM:ssZ”'}
  file.creationTime: {en: 'The timestamp of when the file in filesystem was created
      as ''yyyy-MM-dd''T''HH:mm:ssZ''', zh: '文件系统中文件创建为“yyyy-MM-dd”“HH:MM:ssZ”时的时间戳'}
  file.owner: {en: The user that owns the file in filesystem, zh: 文件系统中拥有文件的用户}
  file.size: {en: The number of bytes in the file in filesystem, zh: 文件系统中文件的字节数}
  file.permissions: {en: 'The permissions for the file in filesystem. This is formatted
      as 3 characters for the owner, 3 for the group, and 3 for other users. For example
      rw-rw-r--', zh: 文件系统中文件的权限。所有者的格式为3个字符，组为3个，其他用户为3个。例如rw-rw-r--}
tags:
  en: [file, get, list, ingest, source, filesystem]
  zh: [文件, 收到, 列表, 摄入, 来源, 文件系统]
