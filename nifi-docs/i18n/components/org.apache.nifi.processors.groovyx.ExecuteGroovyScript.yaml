relationships:
  success: {en: FlowFiles that were successfully processed, zh: 已成功处理的FlowFiles}
  failure: {en: FlowFiles that failed to be processed, zh: 未能处理的FlowFiles}
dynamicProperties:
  A script engine property to update:
    en: {description: 'Updates a script engine property specified by the Dynamic Property''s
        key with the value specified by the Dynamic Property''s value. Use `CTL.`
        to access any controller services, `SQL.` to access any DBCPServices, `RecordReader.`
        to access RecordReaderFactory instances, or `RecordWriter.` to access any
        RecordSetWriterFactory instances.', value: The value to set it to}
    zh: {description: 使用动态属性的值指定的值更新由动态属性的键指定的脚本引擎属性。使用`CTL。`访问任何控制器服务“SQL”要访问任何DBCP服务，请使用“RecordReader”访问RecordReaderFactory实例或“RecordWriter”访问任何RecordSetWriterFactory实例。,
      value: 要将其设置为的值}
capabilityDescription: {en: 'Experimental Extended Groovy script processor. The script
    is responsible for handling the incoming flow file (transfer to SUCCESS or remove,
    e.g.) as well as any flow files created by the script. If the handling is incomplete
    or incorrect, the session will be rolled back.', zh: 实验性扩展Groovy脚本处理器。脚本负责处理传入的流文件（例如传输到SUCCESS或删除）以及脚本创建的任何流文件。如果处理不完整或不正确，会话将回滚。}
properties:
  groovyx-script-body:
    en: {displayName: Script Body, description: Body of script to execute. Only one
        of Script File or Script Body may be used}
    zh: {description: 要执行的脚本体。只能使用脚本文件或脚本正文之一, displayName: 脚本正文}
  groovyx-failure-strategy:
    en: {displayName: Failure strategy, description: 'What to do with unhandled exceptions.
        If you want to manage exception by code then keep the default value `rollback`.
        If `transfer to failure` selected and unhandled exception occurred then all
        flowFiles received from incoming queues in this session will be transferred
        to `failure` relationship with additional attributes set: ERROR_MESSAGE and
        ERROR_STACKTRACE. If `rollback` selected and unhandled exception occurred
        then all flowFiles received from incoming queues will be penalized and returned.
        If the processor has no incoming connections then this parameter has no effect.'}
    zh: {description: 如何处理未处理的异常。如果要通过代码管理异常，请保留默认值“rollback”。如果选择了“传输到失败”，并且发生了未处理的异常，则此会话中从传入队列接收的所有flowFiles都将传输到“失败”关系，并设置了其他属性：ERROR_MESSAGE和ERROR_STACKTRACE。如果选择了“回滚”并且发生了未处理的异常，则从传入队列接收的所有flowFiles都将受到惩罚并返回。如果处理器没有传入连接，则此参数无效。,
      displayName: 故障策略}
  groovyx-additional-classpath:
    en: {displayName: Additional classpath, description: 'Classpath list separated
        by semicolon or comma. You can use masks like `*`, `*.jar` in file name.'}
    zh: {description: 用分号或逗号分隔的类路径列表。您可以使用“*”、“*”等掩码。jar文件名。, displayName: 其他类路径}
  groovyx-script-file:
    en: {displayName: Script File, description: Path to script file to execute. Only
        one of Script File or Script Body may be used}
    zh: {description: 要执行的脚本文件的路径。只能使用脚本文件或脚本正文之一, displayName: 脚本文件}
tags:
  en: [script, groovy, groovyx]
  zh: [剧本, 常规的, 槽状花纹]
