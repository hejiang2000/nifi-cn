relationships:
  success: {en: All FlowFiles that are received are routed to success, zh: 接收到的所有FlowFiles都将路由成功}
capabilityDescription: {en: Lists directory in an Azure Data Lake Storage Gen 2 filesystem,
  zh: 列出Azure Data Lake Storage Gen 2文件系统中的目录}
statefulDescription: {en: 'After performing a listing of files, the timestamp of the
    newest file is stored. This allows the Processor to list only files that have
    been added or modified after this date the next time that the Processor is run.
    State is stored across the cluster so that this Processor can be run on Primary
    Node only and if a new Primary Node is selected, the new node can pick up where
    the previous node left off, without duplicating the data.', zh: 执行文件列表后，将存储最新文件的时间戳。这允许处理器在下次运行处理器时仅列出在此日期之后添加或修改的文件。状态存储在整个集群中，因此此处理器只能在主节点上运行，如果选择了新的主节点，则新节点可以从上一个节点停止的位置恢复，而无需复制数据。}
properties:
  Minimum File Age:
    en: {displayName: Minimum File Age, description: The minimum age that a file must
        be in order to be pulled; any file younger than this amount of time (according
        to last modification date) will be ignored}
    zh: {description: 文件必须达到的最短使用期限才能被提取；任何小于此时间（根据上次修改日期）的文件都将被忽略, displayName: 最小文件期限}
  et-initial-listing-target:
    en: {displayName: Entity Tracking Initial Listing Target, description: Specify
        how initial listing should be handled. Used by 'Tracking Entities' strategy.}
    zh: {description: 指定如何处理初始列表。由“跟踪实体”策略使用。, displayName: 实体跟踪初始上市目标}
  Maximum File Age:
    en: {displayName: Maximum File Age, description: The maximum age that a file must
        be in order to be pulled; any file older than this amount of time (according
        to last modification date) will be ignored}
    zh: {description: 文件必须达到的最长使用期限才能被提取；任何早于此时间（根据上次修改日期）的文件都将被忽略, displayName: 最大文件期限}
  record-writer:
    en: {displayName: Record Writer, description: 'Specifies the Record Writer to
        use for creating the listing. If not specified, one FlowFile will be created
        for each entity that is listed. If the Record Writer is specified, all entities
        will be written to a single FlowFile instead of adding attributes to individual
        FlowFiles.'}
    zh: {description: 指定用于创建列表的记录编写器。如果未指定，将为列出的每个实体创建一个FlowFile。如果指定了记录编写器，则所有实体都将写入单个FlowFile，而不是向单个FlowFile添加属性。,
      displayName: 记录编写器}
  proxy-configuration-service:
    en: {displayName: Proxy Configuration Service, description: 'Specifies the Proxy
        Configuration Controller Service to proxy network requests. Supported proxies:
        HTTP, SOCKS In case of SOCKS, it is not guaranteed that the selected SOCKS
        Version will be used by the processor.'}
    zh: {description: 指定代理配置控制器服务以代理网络请求。支持的代理：HTTP、SOCKS如果是SOCKS，则不保证处理器将使用所选的SOCKS版本。,
      displayName: 代理配置服务}
  Maximum File Size:
    en: {displayName: Maximum File Size, description: The maximum size that a file
        can be in order to be pulled}
    zh: {description: 文件可以被拉取的最大大小, displayName: 最大文件大小}
  et-time-window:
    en: {displayName: Entity Tracking Time Window, description: 'Specify how long
        this processor should track already-listed entities. ''Tracking Entities''
        strategy can pick any entity whose timestamp is inside the specified time
        window. For example, if set to ''30 minutes'', any entity having timestamp
        in recent 30 minutes will be the listing target when this processor runs.
        A listed entity is considered ''new/updated'' and a FlowFile is emitted if
        one of following condition meets: 1. does not exist in the already-listed
        entities, 2. has newer timestamp than the cached entity, 3. has different
        size than the cached entity. If a cached entity''s timestamp becomes older
        than specified time window, that entity will be removed from the cached already-listed
        entities. Used by ''Tracking Entities'' strategy.'}
    zh: {description: 指定此处理器跟踪已列出实体的时间。'跟踪实体的策略可以选择时间戳在指定时间窗口内的任何实体。例如，如果设置为“30分钟”，则在该处理器运行时，具有最近30分钟时间戳的任何实体都将成为列表目标。如果满足以下条件之一，则将列出的实体视为“新的/更新的”，并发出FlowFile：1.已列出的实体中不存在，2.具有比缓存实体更新的时间戳，3.具有与缓存实体不同的大小。如果缓存实体的时间戳早于指定的时间窗口，则将从缓存的已列出实体中删除该实体。由“跟踪实体”策略使用。,
      displayName: 实体跟踪时间窗口}
  recurse-subdirectories:
    en: {displayName: Recurse Subdirectories, description: Indicates whether to list
        files from subdirectories of the directory}
    zh: {description: 指示是否列出目录子目录中的文件, displayName: 定期子目录}
  filesystem-name:
    en: {displayName: Filesystem Name, description: Name of the Azure Storage File
        System (also called Container). It is assumed to be already existing.}
    zh: {description: Azure存储文件系统（也称为容器）的名称。假设它已经存在。, displayName: 文件系统名称}
  listing-strategy:
    en: {displayName: Listing Strategy, description: Specify how to determine new/updated
        entities. See each strategy descriptions for detail.}
    zh: {description: 指定如何确定新的/更新的实体。有关详细信息，请参阅每个策略描述。, displayName: 上市策略}
  adls-credentials-service:
    en: {displayName: ADLS Credentials, description: Controller Service used to obtain
        Azure Credentials.}
    zh: {description: 用于获取Azure凭据的控制器服务。, displayName: ADLS证书}
  Minimum File Size:
    en: {displayName: Minimum File Size, description: The minimum size that a file
        must be in order to be pulled}
    zh: {description: 文件必须达到的最小大小才能被拉取, displayName: 最小文件大小}
  directory-name:
    en: {displayName: Directory Name, description: 'Name of the Azure Storage Directory.
        The Directory Name cannot contain a leading ''/''. The root directory can
        be designated by the empty string value. In case of the PutAzureDataLakeStorage
        processor, the directory will be created if not already existing.'}
    zh: {description: Azure存储目录的名称。目录名不能包含前导“/”。根目录可以由空字符串值指定。对于PutAzureDataLakeStorage处理器，如果尚未存在，则将创建目录。,
      displayName: 目录名称}
  et-state-cache:
    en: {displayName: Entity Tracking State Cache, description: 'Listed entities are
        stored in the specified cache storage so that this processor can resume listing
        across NiFi restart or in case of primary node change. ''Tracking Entities''
        strategy require tracking information of all listed entities within the last
        ''Tracking Time Window''. To support large number of entities, the strategy
        uses DistributedMapCache instead of managed state. Cache key format is ''ListedEntities::{processorId}(::{nodeId})''.
        If it tracks per node listed entities, then the optional ''::{nodeId}'' part
        is added to manage state separately. E.g. cluster wide cache key = ''ListedEntities::8dda2321-0164-1000-50fa-3042fe7d6a7b'',
        per node cache key = ''ListedEntities::8dda2321-0164-1000-50fa-3042fe7d6a7b::nifi-node3''
        The stored cache content is Gzipped JSON string. The cache key will be deleted
        when target listing configuration is changed. Used by ''Tracking Entities''
        strategy.'}
    zh: {description: '列出的实体存储在指定的缓存存储中，以便此处理器可以在NiFi重新启动或主节点更改时恢复列出“跟踪实体”策略要求在上一个“跟踪时间窗口”内跟踪所有列出实体的信息。为了支持大量实体，该策略使用DistributedMapCache而不是托管状态。缓存密钥格式为“ListedEntities:：｛processorId｝（：：｛nodeId｝）”。如果它跟踪每个节点列出的实体，则会添加可选的“：：｛nodeId｝”部分以单独管理状态。E、
        g.集群范围的缓存键=“ListedEntities:：8dda2321-0164-1000-50fa-3042fe7d6a7b”，每个节点的缓存键为“ListedEntitys::8dda23201-0164-1000-50fa-3042fe7d
        6a7b:：nifi-node3”存储的缓存内容为Gzipped JSON字符串。更改目标列表配置时，将删除缓存密钥。由“跟踪实体”策略使用。',
      displayName: 实体跟踪状态缓存}
  file-filter:
    en: {displayName: File Filter, description: Only files whose names match the given
        regular expression will be listed}
    zh: {description: 仅列出名称与给定正则表达式匹配的文件, displayName: 文件筛选器}
  include-temporary-files:
    en: {displayName: Include Temporary Files, description: Whether to include temporary
        files when listing the contents of configured directory paths.}
    zh: {description: 列出配置的目录路径的内容时是否包含临时文件。, displayName: 包括临时文件}
  path-filter:
    en: {displayName: Path Filter, description: 'When ''Recurse Subdirectories'' is
        true, then only subdirectories whose paths match the given regular expression
        will be scanned'}
    zh: {description: 当“Recurse Subdirectories”为true时，将仅扫描路径与给定正则表达式匹配的子目录, displayName: 路径筛选器}
writeAttributes:
  azure.directory: {en: The name of the Azure Directory, zh: Azure目录的名称}
  azure.filesystem: {en: The name of the Azure File System, zh: Azure文件系统的名称}
  azure.etag: {en: The ETag of the Azure File, zh: Azure文件的ETag}
  azure.lastModified: {en: The last modification time of the Azure File, zh: Azure文件的上次修改时间}
  azure.filename: {en: The name of the Azure File, zh: Azure文件的名称}
  azure.filePath: {en: The full path of the Azure File, zh: Azure文件的完整路径}
  azure.length: {en: The length of the Azure File, zh: Azure文件的长度}
tags:
  en: [azure, microsoft, cloud, storage, adlsgen2, datalake]
  zh: [蔚蓝色的, 微软, 云, 存储, 广告广告2, 数据库]
